<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>healthgone</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>0</persistent>
  <parentName>parHud</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>map_data[0] = 0
map_data[1] = 0
map_data[2] = 0
map_data[3] = 0
map_data[4] = 0
map_data[5] = 0
map_data[6] = 0
map_data[7] = 0
map_data[8] = 0
map_data[9] = 0
map_data[10] = 0
map_data[11] = 0
mymax = 6
mymin = 0
clickedon = 0
time_string = ""
alarm[0] = 2
alarm[1] = 20
flashcol = c_white
colswitch = 0
cango = 0
global.show_time = 1
coll_obj = collision_circle(mouse_x,mouse_y,6,all,0,1); //detect collision at mouse_x and mouse_y position
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>buttonhover</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.show_time = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 20
switch(flashcol)
{
case(c_white): flashcol = c_yellow; break;
case(c_yellow): flashcol = c_white; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cango = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score_show=string_format(global.scoreboard,9,0);
score_show=string_replace(score_show,' ','0')

os_map = os_get_info();
 if os_map != -1
    {
    var size, key, i;
    size = ds_map_size(os_map);
    key = ds_map_find_first(os_map);
    for (i = 0; i &lt; size - 1; i++;)
       {
       map_data[i] = ds_map_find_value(os_map, key);
       key = ds_map_find_next(os_map, key);
       }
    ds_map_destroy(os_map);
    }
    

coll_obj = collision_circle(mouse_x,mouse_y,2,all,0,1); //detect collision at mouse_x and mouse_y position


if (keyboard_check_pressed(global.saved_upkey) 
&amp;&amp; keyboard_check(vk_shift)
&amp;&amp; global.show_debug &gt; mymin)
{ 
global.show_debug -= 1
audio_play_sound(pause,1,false)
}

if (keyboard_check_pressed(global.saved_downkey)
&amp;&amp; keyboard_check(vk_shift)
&amp;&amp; global.show_debug &lt; mymax)
{ 
global.show_debug += 1
audio_play_sound(pause,1,false) 
}

if ((keyboard_check_pressed(global.saved_downkey)
&amp;&amp; global.show_debug = mymax)
|| (keyboard_check_pressed(global.saved_upkey)
&amp;&amp; global.show_debug = mymin)
&amp;&amp; keyboard_check(vk_shift))
{ audio_play_sound(cantcontinue,1,false) }

if (keyboard_check_pressed(ord('Q')) &amp;&amp; cango = 1)
{ instance_destroy() }

if (keyboard_check_pressed(ord('L')))
{
switch(global.lagwarning)
    {
    case 0: global.lagwarning = 1; break;
    case 1: global.lagwarning = 0; break;
    }
}

if (keyboard_check(ord('X')) &amp;&amp; keyboard_check(ord('C')))
if keyboard_check(global.saved_upkey)
{ 
view_hview[0] += 4/4
view_wview[0] += 4/3
view_hport[0] += 4/4
view_wport[0] += 4/3
}

if (keyboard_check(ord('X')) &amp;&amp; keyboard_check(ord('C')))
if keyboard_check(global.saved_downkey)
{ 
view_hview[0] -= 4/4
view_wview[0] -= 4/3
view_hport[0] += 4/4
view_wport[0] += 4/3
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var rel_y, obj, dcol1, dcol2, dcol3, string2;
obj = object_get_name(object_index)
rel_y = 100;
draw_set_font(font10)
dcol1 = c_yellow
dcol2 = c_white
dcol3 = c_aqua
string2 = "FPS: "+string(global.theframes)

if instance_exists(displaydebug)
if global.show_debug = 3
{
text_draw(view_xview[0], view_yview[0]+rel_y, string(map_data[0]),dcol3);
text_draw(view_xview[0], view_yview[0]+rel_y+(15*1), string(global.previous_string[0]),dcol3);
text_draw(view_xview[0], view_yview[0]+rel_y+(15*2), string(global.previous_string[1]),dcol3);
text_draw(view_xview[0], view_yview[0]+rel_y+(15*3), string(global.previous_string[2]),dcol3);
text_draw(view_xview[0], view_yview[0]+rel_y+(15*4), string(global.previous_string[3]),dcol3);
text_draw(view_xview[0], view_yview[0]+rel_y+(15*5), string(global.previous_string[4]),dcol3);
text_draw(view_xview[0], view_yview[0]+rel_y+(15*6), string(global.previous_string[5]),dcol3);
text_draw(view_xview[0], view_yview[0]+rel_y+(15*7), string(global.previous_string[6]),dcol3);
text_draw(view_xview[0], view_yview[0]+rel_y+(15*8), string(global.previous_string[7]),dcol3);
}

if instance_exists(displaydebug)
if global.show_debug = 2
{
text_draw(view_xview[0]+5, view_yview[0]+100, "TOTAL INSTANCES: "+string(instance_count),dcol1);
text_draw(view_xview[0]+5, view_yview[0]+115, string(instance_number(par_enemy)/instance_count*100)+"% Enemies"+" ("+string(instance_number(par_enemy))+" Instances)",dcol2)
text_draw(view_xview[0]+5, view_yview[0]+130, string(instance_number(parSolid)/instance_count*100)+"% Solids"+" ("+string(instance_number(parSolid))+" Instances)",dcol2);
text_draw(view_xview[0]+5, view_yview[0]+145, string(instance_number(aesthetic_par)/instance_count*100)+"% Aesthetics"+" ("+string(instance_number(aesthetic_par))+" Instances)",dcol2);
text_draw(view_xview[0]+5, view_yview[0]+160, string(instance_number(parCollectable)/instance_count*100)+"% Collectables"+" ("+string(instance_number(parCollectable))+" Instances)",dcol2);
text_draw(view_xview[0]+5, view_yview[0]+175, string(instance_number(parHud)/instance_count*100)+"% HUD"+" ("+string(instance_number(parHud))+" Instances)",dcol2);
text_draw(view_xview[0]+5, view_yview[0]+190, string(instance_number(parEnemySpawner)/instance_count*100)+"% Enemy Spawners"+" ("+string(instance_number(parEnemySpawner))+" Instances)",dcol2);
draw_set_color(c_yellow)
}

if instance_exists(view_object[0])
if global.show_debug = 1
{
if instance_exists(mainchar)
{
text_draw(view_xview[0], view_yview[0]+100, "H-Speed: "+string(view_object[0].hsp),c_white);
text_draw(view_xview[0], view_yview[0]+115, "V-Speed: "+string(view_object[0].vsp),c_white);
text_draw(view_xview[0], view_yview[0]+145, "On Ground: "+string(view_object[0].free),c_white);
}
text_draw(view_xview[0], view_yview[0]+130, "Sprite ID: "+string(view_object[0].sprite_index),c_white);
text_draw(view_xview[0], view_yview[0]+160, "x: "+string(view_object[0].x),c_white);
text_draw(view_xview[0], view_yview[0]+175, "y: "+string(view_object[0].y),c_white);
draw_set_color(c_yellow)
}

if instance_exists(view_object[0])
if global.show_debug = 1
if global.godmode = 0
{
text_draw(view_xview[0], view_yview[0]+205, "God Mode: OFF",c_white)
}

if instance_exists(view_object[0])
if global.show_debug = 1
if global.godmode = 1
{
text_draw(view_xview[0], view_yview[0]+205, "God Mode: ON",c_white);
}

if instance_exists(view_object[0])
if global.show_debug = 0
{
}

if instance_exists(view_object[0])
if global.show_debug = 5
{
text_draw(view_xview[0], view_yview[0]+145, "Current World: "+string(global.current_world),c_yellow);
text_draw(view_xview[0], view_yview[0]+160, ""+string(global.customDebugObject)+": "+string(global.customDebugVar)+" "+string(global.customDebug),c_white);
text_draw(view_xview[0], view_yview[0]+175, "Level name: "+string(global.mlevel),c_yellow);
text_draw(view_xview[0], view_yview[0]+190, "Shader Dark: "+string(global.darkColor),c_white);
text_draw(view_xview[0], view_yview[0]+205, "Shader Light: "+string(global.tilecolor1),c_white);
text_draw(view_xview[0], view_yview[0]+220, "Shader Alpha: "+string(global.tilecolor1alpha),c_white);
text_draw(view_xview[0], view_yview[0]+235, "Doing Something: "+string(global.doingsomething),c_white);
text_draw(view_xview[0], view_yview[0]+250, "Become Day: "+string(global.become_day),c_white);
}



if coll_obj != noone &amp;&amp; coll_obj != obj_viewpoint_border //if colliding with any obj
if global.show_debug = 2 
{
var str_obj_name = object_get_name(coll_obj.object_index); //gets the object name that is colliding at mouse_x, mouse_y position
draw_set_font(font6)
text_draw(mouse_x-(string_length(str_obj_name)/2),mouse_y,string(str_obj_name)+"#x: "+string(coll_obj.x)+"#y: "+string(coll_obj.y)+"#Amount: "+string(instance_number(asset_get_index(str_obj_name))),c_yellow); //draw the object's name at the mouse_x, mouse_y position
draw_set_font(font0)
}

if global.show_debug = 6 
{
text_draw(view_xview[0]+5, view_yview[0]+rel_y+(15*1), "global.level[1,1] "+string(global.level[1,1]),dcol3)
text_draw(view_xview[0]+5, view_yview[0]+rel_y+(15*2), "global.level[1,2] "+string(global.level[1,2]),dcol3)
text_draw(view_xview[0]+5, view_yview[0]+rel_y+(15*3), "global.level[1,3] "+string(global.level[1,3]),dcol3)
text_draw(view_xview[0]+5, view_yview[0]+rel_y+(15*4), "global.level[1,4] "+string(global.level[1,4]),dcol3)
text_draw(view_xview[0]+5, view_yview[0]+rel_y+(15*5), "global.level[1,5] "+string(global.level[1,5]),dcol3)
text_draw(view_xview[0]+5, view_yview[0]+rel_y+(15*6), "global.level[1,6] "+string(global.level[1,6]),dcol3)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SHOW DEBUG 1
var string2;
string2 = "FPS: "+string(global.theframes)
draw_set_font(font6)
if instance_exists(mainchar)
if global.show_debug = 4
{
text_draw(view_xview[0]+5, view_yview[0]+105, "Time Period: "+string(global.time_period),c_white)
text_draw(view_xview[0]+5, view_yview[0]+120, "Hour: "+string(global.hour_time),c_white)
text_draw(view_xview[0]+5, view_yview[0]+135, "Minute: "+string(global.minute_time),c_white)
text_draw(view_xview[0]+5, view_yview[0]+150, "Time Phase: "+string(global.time_phase),c_white)

}
if global.show_debug = 4
{
text_draw(view_xview[0]+5, view_yview[0]+190, string(global.level_event),c_white)
}
draw_set_font(font0)

if (global.theframes &lt; 55 &amp;&amp; global.lagwarning = 1)
{
draw_set_font(font10)
text_draw(view_xview[0]+3,view_yview[0]+180,"Your current game session#is suffering severe lag#Press L to toggle this message",flashcol)
draw_set_font(font0)
}

//show time

if instance_exists(view_object[0])
if global.show_time = 1
{
if global.time_period = 1 //IF TIME IS PM, AND MINUTES IS LESS THAN 10
if global.minute_time &lt; 10
{ time_string = "Time "+string((global.hour_time)-12)+":0"+string(global.minute_time)+"PM" }
if global.time_period = 1 //IF TIME IS PM, AND MINUTES IS &gt;= 10
if global.minute_time &gt;= 10
{ time_string = "Time "+string((global.hour_time)-12)+":"+string(global.minute_time)+"PM" }
if global.time_period = 0 //IF TIME IS AM, AND MINUTES IS LESS THAN 10
if global.minute_time &lt; 10
{ time_string = "Time "+string(global.hour_time)+":0"+string(global.minute_time)+"AM" }
if global.time_period = 0 //IF TIME IS AM, AND MINUTES IS &gt;= 10
if global.minute_time &gt;= 10
{ time_string = "Time "+string(global.hour_time)+":"+string(global.minute_time)+"AM" }
}

//show time

if instance_exists(view_object[0])
if global.show_time = 1
{
draw_set_font(font6)
text_draw(view_xview[0]+4, view_yview[0]+view_hview[0]-string_height(string(string2))-4, string(string2),dcol1);
text_draw(view_xview+view_wview-string_width(string(time_string))-4,view_yview+view_hview-string_height(string(time_string))-4,string(time_string),c_white)
}
draw_set_font(font1)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SHOW DEBUG 2
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SHOW DEBUG 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
