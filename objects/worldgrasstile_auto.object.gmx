<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite430</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>parWorldMapTile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myobj = parWorldMapTile;
up_right = sprite349//
down_right = sprite350//
up_left = sprite351//
down_left = sprite352//
floor_tile = sprite343//
ceiling_tile = sprite338//
ceiling_tile_down = sprite395//
left_wall = sprite344//
right_wall = sprite342//
right_wall_up = sprite390//
fill_tile = sprite345//
north_east = sprite341//
north_west = sprite340//
south_east = sprite336
south_west = sprite339
alarm[1] = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = sprite345

//LEFT WALL (x - 16)
// x O -
// x ~ O
// x O -
if (!place_meeting(x-16,y,myobj)
&amp;&amp; !place_meeting(x-16,y-16,myobj)
&amp;&amp; !place_meeting(x-16,y+16,myobj)
&amp;&amp; place_meeting(x+16,y,myobj)
&amp;&amp; place_meeting(x,y-16,myobj)
&amp;&amp; place_meeting(x,y+16,myobj))
{ with instance_create(x-16,y,obj_wd_grasstile1)
    { sprite_index = other.left_wall }
}

//RIGHT WALL (x + 16)
// - O x
// O ~ x
// - O x
if (!place_meeting(x+16,y,myobj)
&amp;&amp; !place_meeting(x+16,y-16,myobj)
&amp;&amp; !place_meeting(x+16,y+16,myobj)
&amp;&amp; place_meeting(x-16,y,myobj)
&amp;&amp; place_meeting(x,y-16,myobj)
&amp;&amp; place_meeting(x,y+16,myobj))
{ with instance_create(x+16,y,obj_wd_grasstile1)
    { sprite_index = other.right_wall }
}

//FLOOR TILE
// x x x
// O ~ O
// - O -
if (!place_meeting(x,y-16,myobj)
&amp;&amp; !place_meeting(x+16,y-16,myobj)
&amp;&amp; !place_meeting(x-16,y-16,myobj)
&amp;&amp; place_meeting(x,y+16,myobj)
&amp;&amp; place_meeting(x-16,y,myobj)
&amp;&amp; place_meeting(x+16,y,myobj))
{ with instance_create(x,y-16,obj_wd_grasstile1)
    { sprite_index = other.floor_tile }
}

//CEILING_TILE
// - O -
// O ~ O
// x x x
if (!place_meeting(x,y+16,myobj)
&amp;&amp; !place_meeting(x+16,y+16,myobj)
&amp;&amp; !place_meeting(x-16,y+16,myobj)
&amp;&amp; place_meeting(x,y-16,myobj)
&amp;&amp; place_meeting(x-16,y,myobj)
&amp;&amp; place_meeting(x+16,y,myobj))
{ with instance_create(x,y+16,obj_wd_grasstile1)
    { sprite_index = other.ceiling_tile }
}

//CURVE UP-RIGHT TILE
// x x X
// x ~ O
// X O -
if (!place_meeting(x-16,y-16,myobj) 
&amp;&amp; !place_meeting(x-16,y,myobj)
&amp;&amp; !place_meeting(x,y-16,myobj)
&amp;&amp; place_meeting(x,y+16,myobj)
&amp;&amp; place_meeting(x+16,y,myobj))
{ with instance_create(x-16,y-16,obj_wd_grasstile1)
    { sprite_index = other.up_right }
if !place_meeting(x-16,y+16,myobj) 
  with instance_create(x-16,y,obj_wd_grasstile1)
    { sprite_index = other.left_wall }
if !place_meeting(x+16,y-16,myobj)
  with instance_create(x,y-16,obj_wd_grasstile1)
    { sprite_index = other.floor_tile }
}

//CURVE UP-LEFT TILE
// X x x
// O ~ x
// - O X
if (!place_meeting(x+16,y-16,myobj) 
&amp;&amp; !place_meeting(x+16,y,myobj)
&amp;&amp; !place_meeting(x,y-16,myobj)
&amp;&amp; place_meeting(x,y+16,myobj)
&amp;&amp; place_meeting(x-16,y,myobj))
{ with instance_create(x+16,y-16,obj_wd_grasstile1)
    { sprite_index = other.up_left }
if !place_meeting(x+16,y+16,myobj) 
  with instance_create(x+16,y,obj_wd_grasstile1)
    { sprite_index = other.right_wall_up }
if !place_meeting(x-16,y-16,myobj)
  with instance_create(x,y-16,obj_wd_grasstile1)
    { sprite_index = other.floor_tile }
}

//CURVE DOWN-RIGHT TILE
// X O -
// x ~ O
// x x X
if (!place_meeting(x-16,y+16,myobj) 
&amp;&amp; !place_meeting(x-16,y,myobj)
&amp;&amp; !place_meeting(x,y+16,myobj)
&amp;&amp; place_meeting(x,y-16,myobj)
&amp;&amp; place_meeting(x+16,y,myobj))
{ with instance_create(x-16,y+16,obj_wd_grasstile1)
    { sprite_index = other.down_right }
if !place_meeting(x-16,y-16,myobj) 
  with instance_create(x-16,y,obj_wd_grasstile1)
    { sprite_index = other.left_wall }
if !place_meeting(x+16,y+16,myobj)
  with instance_create(x,y+16,obj_wd_grasstile1)
    { sprite_index = other.ceiling_tile_down }
}

//CURVE DOWN-LEFT TILE
// - O X
// O ~ x
// X x x
if (!place_meeting(x+16,y+16,myobj) 
&amp;&amp; !place_meeting(x+16,y,myobj)
&amp;&amp; !place_meeting(x,y+16,myobj)
&amp;&amp; place_meeting(x,y-16,myobj)
&amp;&amp; place_meeting(x-16,y,myobj))
{ with instance_create(x+16,y+16,obj_wd_grasstile1)
    { sprite_index = other.down_left }
if !place_meeting(x+16,y-16,myobj) 
  with instance_create(x+16,y,obj_wd_grasstile1)
    { sprite_index = other.right_wall }
if !place_meeting(x-16,y+16,myobj)
  with instance_create(x,y+16,obj_wd_grasstile1)
    { sprite_index = other.ceiling_tile }
}

//NORTH EAST
// - O x
// - ~ O
// - - -
if (place_meeting(x,y-16,myobj)
&amp;&amp; place_meeting(x+16,y,myobj)
&amp;&amp; !place_meeting(x+16,y-16,myobj))
{ with instance_create(x+16,y-16,obj_wd_grasstile1)
    { sprite_index = other.north_east }
}

//NORTH WEST
// x O -
// O ~ -
// - - -
if (place_meeting(x,y-16,myobj)
&amp;&amp; place_meeting(x-16,y,myobj)
&amp;&amp; !place_meeting(x-16,y-16,myobj))
{ with instance_create(x-16,y-16,obj_wd_grasstile1)
    { sprite_index = other.north_west }
}

//SOUTH EAST
// - - -
// - ~ O
// - O x
if (place_meeting(x,y+16,myobj)
&amp;&amp; place_meeting(x+16,y,myobj)
&amp;&amp; !place_meeting(x+16,y+16,myobj))
{ with instance_create(x+16,y+16,obj_wd_grasstile1)
    { sprite_index = other.south_east }
}

//SOUTH WEST
// - - -
// O ~ -
// x O -
if (place_meeting(x,y+16,myobj)
&amp;&amp; place_meeting(x-16,y,myobj)
&amp;&amp; !place_meeting(x-16,y+16,myobj))
{ with instance_create(x-16,y+16,obj_wd_grasstile1)
    { sprite_index = other.south_west }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
