<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>level_not_unlocked</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12</depth>
  <persistent>0</persistent>
  <parentName>parWorldTile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lvl_id = ""
incontact = 0
where_to = 0
delay = 0
levelfinished = 0
level[0] = 0
level[1,0] = 0
level[1,1] = level1
level[1,2] = level2
level[1,3] = level3
level[1,4] = level4
level[1,5] = level5
level[1,6] = level6
level[1,7] = level7
level[1,8] = level8
level[1,9] = level9
sw = 0
message[0] = "\2"+string(lvl_id)
message[1] = "\2"+string(lvl_id)
twirl = 0;
message_current = 0;
timer = 0;
cutoff = 0;
portrait = "none";
modifier = 0;

t = 0;
amplitude = 3;
freq = 2;
increment = 1;

done = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//if player is on level object
if levelfinished = 0 
if global.level_event != "death" {
if ((place_meeting(x,y,obj_worldmap_bird)) || (place_meeting(x,y,obj_buffer_worldmap_bird)))
{ sprite_index = sprite356; incontact = 1; }
else
{ sprite_index = level_not_unlocked; incontact = 0; }
}

//if player just won level and exited
if levelfinished = 1 &amp;&amp; global.level_event == "levelwin" 
if ((place_meeting(x,y,obj_worldmap_bird)) || (place_meeting(x,y,obj_buffer_worldmap_bird)))
{ 
if delay &lt; 50
    { 
    delay += 1; 
    }
if delay &gt;= 50 // IT RUNS THIS CODE
    {
    delay = 50
    global.level_end_session = "processing"
    sprite_index = level_just_finished; 
    image_speed = 0.2;
    incontact = 1;
    if image_index &gt; 5 // BUT NOT THIS?
        { 
        twirl += 1; 
        image_index = 0; 
        audio_play_sound(switch_snd,1,false); 
        } 
    if twirl &gt;= 4 
        { 
        sprite_index = level_complete; 
        image_index = 0; 
        delay = 0;
        twirl = 0;
        global.level_end_session = "complete" 
        } 
    } 
}
if ((!place_meeting(x,y,obj_worldmap_bird)) &amp;&amp; (!place_meeting(x,y,obj_buffer_worldmap_bird)))
    { 
    incontact = 0; 
    }

if place_meeting(x,y,obj_buffer_worldmap_bird)
if global.level_event == "levelwin"
{
var a;
for (a = 0; a &lt; 10; a += 1) {
    if where_to = level[1,a] {
    levelfinished = 1;
    /* 
    When we add more worlds, 
    replace level[1,a] 
    with    level[global.currentworld,a] 
    */
    
    global.level[1,a] = 1; //Completed level
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
if ((incontact = 1) &amp;&amp; (sw = 0)) { 
    /* Display the level name 
    above level object when player 
    is standing on it */
    sw = 1;
    with(instance_create(x,y-35,obj_dialogue2)) {
        tX = x - (string_length(other.lvl_id)*charWidth)/2 //+(sprite_width)
        tY = y
        message[0] = "\2"+string(other.lvl_id)
        myid = other.id
}}

if (incontact = 0 &amp;&amp; sw = 1) {
    /* If the player is no longer in contact 
    with this level object and the level name
    dialogue object ID is the same as the 
    level object ID, destroy dialogue. */
    sw = 0;
    with(obj_dialogue2) {
        if myid = other.id { 
            instance_destroy(); 
}}}

/* 
draw_self()
if sprite_index = sprite356
{ 
draw_set_font(font7)
text_draw(x+(sprite_width/2)-(string_width(lvl_id)/2),y-(sprite_height*2.2),""+string(lvl_id),c_white) 
draw_set_font(font0)
}
draw_self();
draw_set_font(font6); 
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
