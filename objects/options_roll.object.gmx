<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>to_exit = false
optionroll = 0
optionrollmax = 7
opcol1 = c_white
opcol2 = c_white
opcol3 = c_white
opcol4 = c_white
opcol5 = c_white
opcol6 = c_white
global.console_enabled = 1
pause_bg = -1
pause_col=make_color_rgb(40,40,40);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.console_enabled = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>no_exit = false

if room == optionsroom
{ room_goto(titlescreen) }
else
{ instance_destroy() }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//optionroll = 1 (Select Jump Key)
//optionroll = 2 (Select Move Left Key)
//optionroll = 3 (Select Move Right Key)
//optionroll = 4 (Select Down Key)
//optionroll = 5 (Select Throw Key)
var maxam = 6

if (mouse_wheel_down() || mouse_wheel_up() 
|| keyboard_check_pressed(global.saved_downkey)
|| keyboard_check_pressed(global.saved_upkey))
if !mouse_check_button(mb_left)
if optionroll != 0
{
audio_play_sound(counting,1,false)
}

if mouse_wheel_down() || keyboard_check_pressed(global.saved_downkey)
if optionroll &lt;= maxam
{ optionroll += 1 }

if mouse_wheel_down() || keyboard_check_pressed(global.saved_downkey)
if optionroll &gt; maxam
{ optionroll = 0 }

if mouse_wheel_up() || keyboard_check_pressed(global.saved_upkey)
if optionroll &gt;= 0
{ optionroll -= 1 }

if mouse_wheel_up() || keyboard_check_pressed(global.saved_upkey)
if optionroll &lt; 0
{ optionroll = maxam }

if optionroll = 1
{ opcol1 = c_yellow } else {opcol1 = c_white}
if optionroll = 2
{ opcol2 = c_yellow } else {opcol2 = c_white}
if optionroll = 3
{ opcol3 = c_yellow } else {opcol3 = c_white}
if optionroll = 4
{ opcol4 = c_yellow } else {opcol4 = c_white}
if optionroll = 5
{ opcol5 = c_yellow } else {opcol5 = c_white}
if optionroll = 6
{ opcol6 = c_yellow } else {opcol6 = c_white}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//optionroll = 1 (Select Jump Key)
//optionroll = 2 (Select Move Left Key)
//optionroll = 3 (Select Move Right Key)
//optionroll = 4 (Select Down Key)
//optionroll = 5 (Select Throw Key)

if keyboard_check_pressed(ord('O')) || keyboard_check_pressed(vk_escape)
{
global.console_enabled = 0
instance_destroy() 
}

var vup, vdown, vleft, vright, vthrow, esc;
vup = global.saved_upkey
vdown = global.saved_downkey
vleft = global.saved_leftkey
vright = global.saved_rightkey
vthrow = global.saved_throwkey
esc = vk_escape

if optionroll = optionrollmax + 1
if keyboard_check(vk_anykey)
{ no_exit = true
  alarm[0] = 5
}

if optionroll = 1 //(Select Jump Key)
if (keyboard_check_pressed(vk_anykey) &amp;&amp; mouse_check_button(mb_left))
{
    {
    audio_play_sound(menuselect,1,false)
    audio_sound_pitch(menuselect,random_range(0.6,1))
    global.saved_upkey = keyboard_lastkey
    }
}

if optionroll = 2 //(Select Left Key)
if (keyboard_check_pressed(vk_anykey) &amp;&amp; mouse_check_button(mb_left))
{ 
    {
    audio_play_sound(menuselect,1,false)
    audio_sound_pitch(menuselect,random_range(0.6,1))
    global.saved_leftkey = keyboard_lastkey
    }
}

if optionroll = 3 //(Select Right Key)
if (keyboard_check_pressed(vk_anykey) &amp;&amp; mouse_check_button(mb_left))
{ 
    {
    audio_play_sound(menuselect,1,false)
    audio_sound_pitch(menuselect,random_range(0.6,1))
    global.saved_rightkey = keyboard_lastkey
    }
}

if optionroll = 4 //(Select Down Key)
if (keyboard_check_pressed(vk_anykey) &amp;&amp; mouse_check_button(mb_left))
{
    {
    audio_play_sound(menuselect,1,false)
    audio_sound_pitch(menuselect,random_range(0.6,1))
    global.saved_downkey = keyboard_lastkey
    }
}

if optionroll = 5 //(Select Throw Key)
if (keyboard_check_pressed(vk_anykey) &amp;&amp; mouse_check_button(mb_left))
{
    {
    audio_play_sound(menuselect,1,false)
    audio_sound_pitch(menuselect,random_range(0.6,1))
    global.saved_throwkey = keyboard_lastkey
    }
}

if optionroll = 6 //(Select Dash Key)
if (keyboard_check_pressed(vk_anykey) &amp;&amp; mouse_check_button(mb_left))
{
    {
    audio_play_sound(menuselect,1,false)
    audio_sound_pitch(menuselect,random_range(0.6,1))
    global.saved_dashkey = keyboard_lastkey
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font2)

var op1, op2, op3, op4, op5, op6, esc;

//optionroll = 1 (Select Jump Key)
//optionroll = 2 (Select Move Left Key)
//optionroll = 3 (Select Move Right Key)
//optionroll = 4 (Select Down Key)
//optionroll = 5 (Select Throw Key)

op1 = "Jump Key: "
op2 = "Left Key: "
op3 = "Right Key: "
op4 = "Down Key: "
op5 = "Throw Key: "
op6 = "Dash Key: "
esc = "Press Esc to Exit"

draw_set_alpha(0.5);
draw_set_color(c_black);
draw_rectangle_color(view_xview, view_yview, view_xview+view_wview, view_yview+view_hview, c_black, c_black, c_black, c_black, false);
draw_set_alpha(1);
draw_set_font(font20)
text_draw(view_xview[0]+8,view_yview+(view_hview[0]*.35),"Control Keybinds:#Navigate using #the Mouse Scrollor by using#the Up/Down arrow keys.#(Hold Left Mouse Button#Before Pressing Key)",c_white)
text_draw(view_xview[0]+(view_wview[0]*.64),view_yview+(view_hview[0]*.35),op1+global.asc_def[real(global.saved_upkey)],opcol1)
text_draw(view_xview[0]+(view_wview[0]*.70),view_yview+(view_hview[0]*.45),op2+global.asc_def[real(global.saved_leftkey)],opcol2)
text_draw(view_xview[0]+(view_wview[0]*.64),view_yview+(view_hview[0]*.55),op3+global.asc_def[real(global.saved_rightkey)],opcol3)
text_draw(view_xview[0]+(view_wview[0]*.70),view_yview+(view_hview[0]*.65),op4+global.asc_def[real(global.saved_downkey)],opcol4)
text_draw(view_xview[0]+(view_wview[0]*.64),view_yview+(view_hview[0]*.75),op5+global.asc_def[real(global.saved_throwkey)],opcol5)
text_draw(view_xview[0]+(view_wview[0]*.70),view_yview+(view_hview[0]*.85),op6+global.asc_def[real(global.saved_dashkey)],opcol6)
draw_set_font(font20)
text_draw(view_xview[0]+6,view_yview+view_hview[0]-string_height(esc)-4,""+esc,c_silver)
draw_set_font(font0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
